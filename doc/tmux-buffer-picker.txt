================================================================================
INTRODUCTION                                                            *tmux-buffer-picker*

tmux-buffer-picker.nvim is a template plugin for Neovim that serves as a starting point for
creating new plugins. It provides a structured foundation with best practices
for modern Neovim plugin development.

Table of contents:

1. REQUIREMENTS: Plugin dependencies and setup.            |tmux-buffer-picker-requirements|
2. INSTALLATION: How to install the plugin.                |tmux-buffer-picker-installation|
3. CONFIGURATION: Available options and their defaults.          |tmux-buffer-picker-config|
4. COMMANDS: Commands provided by the plugin.                  |tmux-buffer-picker-commands|
5. FUNCTIONS: Lua functions exposed by the plugin.            |tmux-buffer-picker-functions|

================================================================================
REQUIREMENTS                                               *tmux-buffer-picker-requirements*

Before using tmux-buffer-picker.nvim, ensure you have the following:

- Neovim (>= 0.10)
- luarocks (https://luarocks.org/)
- busted (https://lunarmodules.github.io/busted/)
- nlua (https://github.com/mfussenegger/nlua)

For development:
- lazy.nvim (https://github.com/folke/lazy.nvim)
- lazydev.nvim (https://github.com/folke/lazydev.nvim)

================================================================================
INSTALLATION                                               *tmux-buffer-picker-installation*

It's recommended to use a plugin manager like lazy.nvim to install tmux-buffer-picker.nvim:

>lua
    { "chiendo97/tmux-buffer-picker.nvim", opts = { } }
<

================================================================================
CONFIGURATION                                                    *tmux-buffer-picker-config*

                                                                *tmux-buffer-picker.setup()*
tmux-buffer-picker.setup({opts}) ~

The `tmux-buffer-picker.setup()` function sets up the plugin with user-provided options.
Here are the available options:

>lua
  {
    name = "John Doe" -- The name of the user (default)
  }
<

================================================================================
COMMANDS                                                       *tmux-buffer-picker-commands*

tmux-buffer-picker.nvim provides the following command:

:tmux-buffer-picker [subcommand] ~
  Execute a tmux-buffer-picker.nvim subcommand. Available subcommands:
  - `hello`: Say hello to the user
  - `bye`: Say bye to the user

  If no subcommand is provided or an invalid subcommand is used, an error
  message will be displayed.

================================================================================
FUNCTIONS                                                     *tmux-buffer-picker-functions*

tmux-buffer-picker.nvim exposes the following Lua functions:

                                                                *tmux-buffer-picker.setup()*
tmux-buffer-picker.setup({opts}) ~
  Set up the plugin with the given options. See |tmux-buffer-picker-config| for available
  options.

                                                                *tmux-buffer-picker.hello()*
tmux-buffer-picker.hello() ~
  Say hello to the user. Returns a string with the greeting message.

                                                                  *tmux-buffer-picker.bye()*
tmux-buffer-picker.bye() ~
  Say bye to the user. Returns a string with the farewell message.


================================================================================
vim:tw=78:ts=8:et:ft=help:norl:
